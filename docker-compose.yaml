version: '3'

services:
    api:
        build:
            context: ./
            dockerfile: docker/api/Dockerfile
        env_file:
          - ./.env
        ports:
          - "${GUNICORN_PORT}:${GUNICORN_PORT}"
        volumes:
          - "./src/:/app/src/"
        depends_on:
          - database
          - rabbitmq
        networks:
          - fibo_network
    database:
        image: postgres:12.0-alpine
        restart: always
        env_file:
          - ./.env
        ports:
          - ${DB_PORT}:${DB_PORT}
        environment:
          - POSTGRES_USER=${DB_USER}
          - POSTGRES_PASSWORD=${DB_PASS}
          - POSTGRES_DB=${DB_NAME}
        volumes:
          - postgres_data:/var/lib/postgresql/data/
        command:
          - -p ${DB_PORT}
        networks:
          - fibo_network
    rabbitmq:
        image: rabbitmq:3.8.2-management-alpine
        ports:
          # The standard AMQP protocol port
          - '5672:5672'
          # HTTP management UI
          - '15672:15672'
        networks:
          - fibo_network
    generator:
        build:
          context: ./
          dockerfile: docker/generator/Dockerfile
        env_file:
          - ./.env
        volumes:
          - "./src/:/app/src/"
        depends_on:
          - rabbitmq
        networks:
          - fibo_network
    ingest:
      build:
        context: ./
        dockerfile: docker/ingest/Dockerfile
      env_file:
        - ./.env
      volumes:
        - "./src/:/app/src/"
      depends_on:
        - database
        - rabbitmq
      networks:
        - fibo_network

volumes:
    postgres_data:

networks:
    fibo_network:
